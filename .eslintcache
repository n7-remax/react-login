[{"D:\\Max Archives\\Front-End\\react-login\\src\\index.tsx":"1","D:\\Max Archives\\Front-End\\react-login\\src\\reportWebVitals.ts":"2","D:\\Max Archives\\Front-End\\react-login\\src\\components\\App.tsx":"3","D:\\Max Archives\\Front-End\\react-login\\src\\components\\Login\\Login.tsx":"4","D:\\Max Archives\\Front-End\\react-login\\src\\components\\CustomSlider\\CustomSlider.tsx":"5"},{"size":511,"mtime":1611324765852,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1609783211214,"results":"8","hashOfConfig":"7"},{"size":303,"mtime":1611499990231,"results":"9","hashOfConfig":"7"},{"size":3533,"mtime":1611497822752,"results":"10","hashOfConfig":"7"},{"size":2123,"mtime":1611519139228,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"l1g5io",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Max Archives\\Front-End\\react-login\\src\\index.tsx",[],["24","25"],"D:\\Max Archives\\Front-End\\react-login\\src\\reportWebVitals.ts",[],"D:\\Max Archives\\Front-End\\react-login\\src\\components\\App.tsx",[],"D:\\Max Archives\\Front-End\\react-login\\src\\components\\Login\\Login.tsx",["26","27","28","29","30","31","32","33","34"],"import { useState } from \"react\";\r\nimport logo from \"../../assets/logo.svg\";\r\n\r\nconst REGEXP = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nconst Login = () => {\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [passwordBlur, setPasswordBlur] = useState<Boolean>(false);\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [emailBlur, setEmailBlur] = useState<Boolean>(false);\r\n\r\n  const onPasswordBlur = () => {\r\n    setPasswordBlur(true);\r\n  };\r\n  const onPasswordFocus = () => {\r\n    setPasswordBlur(false);\r\n  };\r\n  const onEmailBlur = () => {\r\n    setEmailBlur(true);\r\n  };\r\n  const onEmailFocus = () => {\r\n    setEmailBlur(false);\r\n  };\r\n  console.log(\"emailBLur\",emailBlur);\r\n  console.log(\"regexp\",REGEXP.test(email));\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"logo\"></img>\r\n      </div>\r\n      <div className=\"sign-in\">\r\n        <div className=\"sign-up\">\r\n          <h1>Sign In</h1>\r\n          <p>\r\n            Donâ€™t have an Xcellerate account? <a href=\"#\">Sign up now</a>\r\n          </p>\r\n        </div>\r\n        <div className=\"form\">\r\n          <div className=\"input\">\r\n            <label>Email</label>\r\n            <input\r\n              className={\r\n                !REGEXP.test(email) && email?.length !== 0 && emailBlur\r\n                  ? \"error\"\r\n                  : REGEXP.test(email) && emailBlur\r\n                  ? \"complete\"\r\n                  : \"\"\r\n              }\r\n              type=\"email\"\r\n              value={email}\r\n              onFocus={onEmailFocus}\r\n              onBlur={onEmailBlur}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <div\r\n              className={\r\n                !REGEXP.test(email) && email?.length !== 0 && emailBlur\r\n                  ? \"error-password\"\r\n                  : \"display-none\"\r\n              }\r\n            >\r\n              Invalid email\r\n            </div>\r\n          </div>\r\n          <div className=\"input\">\r\n            <label>Password</label>\r\n            <input\r\n              className={\r\n                password?.length < 4 && password?.length !== 0 && passwordBlur\r\n                  ? \"error\"\r\n                  : password?.length > 3 && password?.length !== 0 && passwordBlur? \"complete\":\"\"\r\n              }\r\n              maxLength={35}\r\n              value={password}\r\n              onBlur={onPasswordBlur}\r\n              onFocus={onPasswordFocus}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              type=\"password\"\r\n            />\r\n            <a href=\"#\">Forgot your password?</a>\r\n            <div\r\n              className={\r\n                password?.length < 4 && password?.length !== 0 && passwordBlur\r\n                  ? \"error-password\"\r\n                  : \"display-none\"\r\n              }\r\n            >\r\n              Invalid format too short\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={\r\n              email.length !== 0 && password.length !== 0 && password?.length > 3 && REGEXP.test(email)\r\n                ? \"btn\"\r\n                : \"btn disabled\"\r\n            }\r\n          >\r\n            Sign in\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"links\">\r\n        <a href=\"#\">Contact</a>\r\n        <a href=\"#\">Privacy</a>\r\n        <a href=\"#\">Terms</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Max Archives\\Front-End\\react-login\\src\\components\\CustomSlider\\CustomSlider.tsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":4,"column":38,"nodeType":"41","messageId":"42","endLine":4,"endColumn":39,"suggestions":"43"},{"ruleId":"39","severity":1,"message":"40","line":4,"column":63,"nodeType":"41","messageId":"42","endLine":4,"endColumn":64,"suggestions":"44"},{"ruleId":"39","severity":1,"message":"40","line":4,"column":72,"nodeType":"41","messageId":"42","endLine":4,"endColumn":73,"suggestions":"45"},{"ruleId":"39","severity":1,"message":"40","line":4,"column":76,"nodeType":"41","messageId":"42","endLine":4,"endColumn":77,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":35,"column":47,"nodeType":"49","endLine":35,"endColumn":59},{"ruleId":"47","severity":1,"message":"48","line":80,"column":13,"nodeType":"49","endLine":80,"endColumn":25},{"ruleId":"47","severity":1,"message":"48","line":103,"column":9,"nodeType":"49","endLine":103,"endColumn":21},{"ruleId":"47","severity":1,"message":"48","line":104,"column":9,"nodeType":"49","endLine":104,"endColumn":21},{"ruleId":"47","severity":1,"message":"48","line":105,"column":9,"nodeType":"49","endLine":105,"endColumn":21},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["52","53"],["54","55"],["56","57"],["58","59"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"messageId":"60","fix":"61","desc":"62"},{"messageId":"63","fix":"64","desc":"65"},{"messageId":"60","fix":"66","desc":"62"},{"messageId":"63","fix":"67","desc":"65"},{"messageId":"60","fix":"68","desc":"62"},{"messageId":"63","fix":"69","desc":"65"},{"messageId":"60","fix":"70","desc":"62"},{"messageId":"63","fix":"71","desc":"65"},"removeEscape",{"range":"72","text":"73"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"74","text":"75"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"76","text":"73"},{"range":"77","text":"75"},{"range":"78","text":"73"},{"range":"79","text":"75"},{"range":"80","text":"73"},{"range":"81","text":"75"},[117,118],"",[117,117],"\\",[142,143],[142,142],[151,152],[151,151],[155,156],[155,155]]